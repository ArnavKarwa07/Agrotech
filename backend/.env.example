# Agrotech Backend Environment Variables
# Copy this file to .env and replace the placeholder values with your actual configuration

# Weather API Configuration
OPENWEATHER_API_KEY=your_openweather_api_key_here
WEATHERAPI_ENABLED=true
WEATHERAPI_KEY=your_weatherapi_key_here

# Application Configuration
APP_NAME=Agrotech API
APP_VERSION=1.0.0
DEBUG=True
LOG_LEVEL=info

# Server Configuration
HOST=0.0.0.0
PORT=8000

# Security Configuration
SECRET_KEY=your_secret_key_here_for_jwt_tokens
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Database Configuration (for future use)
DATABASE_URL=sqlite:///./agrotech.db
# For PostgreSQL: postgresql://user:password@localhost/agrotech
# For MySQL: mysql://user:password@localhost/agrotech

# File Upload Configuration
MAX_FILE_SIZE=10485760  # 10MB in bytes
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif

# ML Model Configuration
MODEL_PATH=./models/
ENABLE_GPU=False

# Email Configuration (for password reset, etc.)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_password_here
EMAIL_FROM=noreply@agrotech.com

# External API Rate Limits
WEATHER_API_RATE_LIMIT=60  # requests per minute

# ThingSpeak Demo Configuration (for MATLAB Analysis TimeControl demo)
# Copy the channel ID and API keys from your ThingSpeak account.
THINGSPEAK_CHANNEL_ID=your_channel_id_here
THINGSPEAK_WRITE_API_KEY=your_write_api_key_here
THINGSPEAK_READ_API_KEY=your_read_api_key_here

# Persistence options (documentation for demo)
# If true, the MATLAB Analysis/demo is intended to write demo values once and persist them.
THINGSPEAK_WRITE_PERSIST=true
# If true, the MATLAB Analysis will be written to behave idempotently and only write if needed.
THINGSPEAK_WRITE_ONCE=true

# Optional: default hardcoded demo values (used only as reference)
THINGSPEAK_DEMO_N=10
THINGSPEAK_DEMO_P=5
THINGSPEAK_DEMO_K=7
THINGSPEAK_DEMO_MOISTURE=30
THINGSPEAK_DEMO_PH=6.5
THINGSPEAK_DEMO_TEMP=25.0

# Mapping for weather/prediction outputs if you choose to persist them in the demo channel
# Use unused fields on the channel (e.g., fields 7..10)
THINGSPEAK_WEATHER_FIELD_TEMP=7
THINGSPEAK_WEATHER_FIELD_HUMIDITY=8
THINGSPEAK_WEATHER_FIELD_WIND=9
THINGSPEAK_PREDICTION_FIELD=10

# OpenWeather (weather data used for predictions / demo)
# Set to true to fetch weather in the MATLAB Analysis demo
THINGSPEAK_USE_OPENWEATHER=true

# Choose location method: set to true to use city name, false to use lat/lon
OPENWEATHER_USE_CITY=true
# If using city name:
OPENWEATHER_CITY=Bengaluru
# If using lat/lon (set OPENWEATHER_USE_CITY=false)
OPENWEATHER_LAT=
OPENWEATHER_LON=

# OpenWeather API options
OPENWEATHER_UNITS=metric   # 'metric' or 'imperial'

# ThingSpeak field mapping for weather data (optional â€” MATLAB Analysis can write these back)
# Map weather outputs to fields on the demo channel (choose unused fields)
# e.g. field7 = weather temp, field8 = humidity, field9 = wind speed, field10 = description (text)
OPENWEATHER_FIELD_TEMP=7
OPENWEATHER_FIELD_HUMIDITY=8
OPENWEATHER_FIELD_WIND=9
OPENWEATHER_FIELD_DESC=10

# ThingSpeak field mapping for WeatherAPI outputs (optional)
# field7 = weather temp, field8 = humidity, field9 = wind (kph), field10 = condition (text)
WEATHERAPI_FIELD_TEMP=7
WEATHERAPI_FIELD_HUMIDITY=8
WEATHERAPI_FIELD_WIND=9
WEATHERAPI_FIELD_CONDITION=10

# Backend ThingSpeak integration (for demo mode / reading persisted demo values)
# Set USE_THINGSPEAK=true to have the backend read sensor data from ThingSpeak channel
USE_THINGSPEAK=true

# ThingSpeak channel and keys (already present above, keep them)
# THINGSPEAK_CHANNEL_ID=your_channel_id_here
# THINGSPEAK_READ_API_KEY=your_read_api_key_here
# THINGSPEAK_WRITE_API_KEY=your_write_api_key_here

# Optional: which fields your backend should expect for model input
# Default order used in this project:
#  field1 = N, field2 = P, field3 = K, field4 = Moisture, field5 = pH, field6 = temp
THINGSPEAK_MODEL_FIELDS=1,2,3,4,5,6

# Optional: mapping for persisted weather fields (if your MATLAB Analysis wrote them)
THINGSPEAK_WEATHER_FIELDS=7,8,9,10

# Polling behavior (if backend will poll instead of just reading on-demand)
THINGSPEAK_POLL_INTERVAL_SECONDS=60

# Note: Demo channel uses 6 fields in this order:
# field1 = N, field2 = P, field3 = K, field4 = Moisture, field5 = pH, field6 = temp
# For the demo use the MATLAB Analysis method + TimeControl.
# The actual hardcoded values will be defined inside the MATLAB Analysis script.

# Note: When THINGSPEAK_USE_OPENWEATHER=true the MATLAB Analysis should:
#  - fetch weather using OPENWEATHER_API_KEY + location settings
#  - either include weather values in the prediction logic OR write them back to the channel
#    using the field mapping above (fields 7..10). Ensure the demo channel has those fields available.